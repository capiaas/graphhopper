name: CD Workflow
run-name: ${{ github.actor }} triggered deployment for ${{ github.repository }}

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.tag }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Fetch All Tags
        run: git fetch --tags

      - name: Determine Next Version
        id: version
        run: |
          last_commit=$(git log -1 --pretty=%B)

          if [[ "$last_commit" == *"BREAKING CHANGE"* || "$last_commit" == *"!:"* ]]; then
          bump="major"
          elif [[ "$last_commit" == feat:* ]]; then
          bump="minor"
          elif [[ "$last_commit" == fix:* ]]; then
          bump="patch"
          else
          bump="patch"
          fi

          echo "VERSION_BUMP=$bump" >> $GITHUB_ENV

          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v1.0.0")

          IFS='.' read -r major minor patch <<< "${latest_tag#v}"

          if [ "$bump" == "major" ]; then
          major=$((major + 1))
          minor=0
          patch=0
          elif [ "$bump" == "minor" ]; then
          minor=$((minor + 1))
          patch=0
          else
          patch=$((patch + 1))
          fi

          next_tag="v$major.$minor.$patch"

          echo "tag=$next_tag" >> $GITHUB_OUTPUT
          echo "::set-output name=tag::$next_tag"
          echo "VERSION=$next_tag" >> $GITHUB_ENV
          echo "tag=$next_tag" >> $GITHUB_OUTPUT

      - name: Create and Push Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ env.VERSION }} --title "Release ${{ env.VERSION }}" --notes "Release notes for ${{ env.VERSION }}"

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log In to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build Docker Images
        run: |
          docker compose -f docker-compose.dev.yml build

      - name: Push Docker Images
        run: |
          docker compose -f docker-compose.dev.yml push -q

      - name: Log Out from Docker
        run: docker logout
